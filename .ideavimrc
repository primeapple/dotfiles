source ~/.vimrc

" nice reads: 
" - https://danidiaz.medium.com/configuring-ideavimrc-de16a4da0715
" - https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b

""""""""""""""""
""" General: """
""""""""""""""""
let mapleader = " "

""""""""""""""""
""" Plugins: """
""""""""""""""""
" see https://github.com/JetBrains/ideavim/wiki/Emulated-plugins

" ys, cs, ds, S
set surround
" gcc, gc + motion, v_gc
set commentary
set highlightedyank

"""""""""""""""""""""""""""""""""""""""""
""" Things that don't work from vimrc """
"""""""""""""""""""""""""""""""""""""""""
" alternative to xnoremap <silent> p p:let @+=@0<CR>:let @"=@0<CR>
xnoremap p "_dP

" Vim Wordmotion, move over camelCases, under_scores, etc.
nnoremap <Leader>w [w
nnoremap d<Leader>w d[w
nnoremap c<Leader>w c[w
nnoremap y<Leader>w y[w
nnoremap v<Leader>w v[w
nnoremap <Leader>e ]w
nnoremap d<Leader>e d]w
nnoremap c<Leader>e c]w
nnoremap y<Leader>e y]w
nnoremap v<Leader>e v]w
nnoremap <Leader>b [b
nnoremap d<Leader>b d[b
nnoremap c<Leader>b c]b
nnoremap y<Leader>b y]b
nnoremap v<Leader>b v]b
nnoremap <Leader>ge ]b
nnoremap d<Leader>ge d]b
nnoremap c<Leader>ge c]b
nnoremap y<Leader>ge y]b
nnoremap v<Leader>ge v]b
" These do not work correctly :(
" nnoremap vi<Leader>w vi[w
" nnoremap yi<Leader>w yi[w
" nnoremap di<Leader>w di[w
" nnoremap ci<Leader>w di[w


""""""""""""""""""""
""" IDEA setings """
""""""""""""""""""""

" marks as bookmarks
set ideamarks
" some line join magic
set ideajoin
" disable bells
set noerrorbells
" NerdTree
set NERDTree

" enable vim as handler for the following
sethandler <C-/> a:vim
sethandler <C-a> a:vim
sethandler <C-b> a:vim
sethandler <C-c> a:vim
sethandler <C-d> a:vim
sethandler <C-e> a:vim
sethandler <C-f> a:vim
sethandler <C-g> a:vim
sethandler <C-h> a:vim
sethandler <C-j> a:vim
sethandler <C-k> a:vim
sethandler <C-l> a:vim
sethandler <C-m> a:vim
sethandler <C-n> a:vim
sethandler <C-o> a:vim
sethandler <C-p> a:vim
sethandler <C-q> a:vim
sethandler <C-r> a:vim
sethandler <C-s> a:vim
sethandler <C-t> a:vim
sethandler <C-u> a:vim
sethandler <C-v> a:vim
sethandler <C-w> a:vim
sethandler <C-x> a:vim
sethandler <C-y> a:vim
sethandler <C-z> a:vim

" Idea specific
map <C-z> <Action>(ToggleDistractionFreeMode)

" SourceCodeEditing
nnoremap <Leader>= :action ReformatCode<cr>
nnoremap <Leader>o :action OptimizeImports<cr>
nnoremap K :action QuickJavaDoc<cr>

"" Goto Stuff ""
" Data type related
nnoremap grd :action GotoDeclaration<cr>
nnoremap grD :vsplit<CR>:action GotoDeclaration<CR>
nnoremap grr :action FindUsages<cr>
nnoremap gpt :action GotoTest<cr>
" nnoremap <Leader>h :action CallHierarchy<cr>
" nnoremap gb :action ShowNavBar<cr>
" nnoremap gi :action GotoImplementation<cr>
" nnoremap gp :action GotoSuperMethod<cr>
" nnoremap gs :action GotoSymbol<cr>
" nnoremap gh :action TypeHierarchy<cr>
" nnoremap gm :action FileStructurePopup<cr>

"" Show stuff

" Navigation
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)
nnoremap ]d :action GotoNextError<cr>
nnoremap [d :action GotoPreviousError<cr>
nnoremap ]q :action NextOccurence<cr>
nnoremap [q :action PreviousOccurence<cr>
nnoremap <Leader>fw :action FindInPath<cr>
nnoremap <Leader>ff :action GotoFile<cr>
nnoremap <Leader>fc :action GotoClass<cr>
nnoremap <Leader>fo :action RecentFiles<cr>
" opens current file in NerdTree
nnoremap - :NERDTreeFind<cr>
nnoremap <C-n> :NERDTreeToggle<cr>

" Imitating Harpoon, using the HarpoonIJ plugin
nnoremap 1gh :action GotoHarpoon1<cr>
nnoremap 2gh :action GotoHarpoon2<cr>
nnoremap 3gh :action GotoHarpoon3<cr>
nnoremap 4gh :action GotoHarpoon4<cr>
nnoremap 5gh :action GotoHarpoon5<cr>

nnoremap gH :action ShowHarpoon<cr>
nnoremap gh :action AddToHarpoon<cr>

" windows
nnoremap <Leader>/ :vsp<CR>
nnoremap <Leader>- :sp<CR>
nnoremap ZZ :action CloseAllEditors<cr>
nnoremap ZQ :action CloseAllEditors<cr>
nnoremap ZC :action HideActiveWindow<cr>
nnoremap ZA :action HideAllWindows<cr>

" Runing stuff
nnoremap <Leader>rr :action Run<cr>
nnoremap <Leader>rn :action ContextRun<cr>
nnoremap <Leader>rf :action RunClass<cr>
map <C-p> <Action>(RebuildProject)
map <Leader>R <Action>(Stop)

" TODO?
" nnoremap <Leader>rt :action ActivateRunToolWindow<cr>
" nnoremap ,l :action ChooseRunConfiguration<cr>
" nnoremap <Leader>rd :action Debug<cr>
" nnoremap <Leader>D :action ContextDebug<cr>
" nnoremap <Leader>C :action DebugClass<cr>
" nnoremap <Leader>f :action RerunFailedTests<cr>

" Debugging
nnoremap <Leader>rb :action ToggleLineBreakpoint<cr>
nnoremap <Leader>rB :action EditBreakpoint<cr>

" Git Integration
nnoremap <Leader>gb :action Annotate<cr>
nnoremap <Leader>gr :action Vcs.RollbackChangedLines<cr>
nnoremap ]g :action VcsShowNextChangeMarker<cr>
nnoremap [g :action VcsShowPrevChangeMarker<cr>

" Code Actions
nnoremap gra :action ShowIntentionActions<cr>
nnoremap grf :action ReformatCode<cr>
nnoremap grn :action RenameElement<cr>

